Função

Função

arg 1
arg 2

arg n

ENTRADA

Executa alguma ação programada

Valor Resultante
SAÍDA

PROCESSAMENTO


Funções SQL

● Recurso avançado do SQL, serve para:
– Executar cálculos usando dados
– Modificar itens de dados individuais
– Manipular saída para grupos de linhas
– Formatar datas e números para exibição
– Converter tipos de dados de colunas
● Funções não são padronizadas pelo SQL.
– Cada Versão/Produto de SGBD tem as suas
● ORACLE <> PostgreSQL <> JavaDB <> MySQL <> SQL Server <> ...
● http://developers.sun.com/docs/javadb/10.4.1.3/ref/ref-single.html
● http://www.postgresql.org/docs/9.3/interactive/index.html
● http://dev.mysql.com/doc/refman/5.0/en/functions.html
● http://www.oracle.com/technology/documentation/index.html

Dois tipos de Funções SQL

● Funções de Uma Única Linha
– Operam linha a linha na instrução
● Funções de Várias Linhas
– Manipulam grupos de linhas e entregam um resultado único

Onde é possível usar

● As funções de um modo geral podem ser utilizadas
– Na projeção e na seleção do comando Select

SELECT funcao2(coluna1) AS APELIDO
FROM tabela
WHERE funcao3(coluna2) = valor1;

– Nas restrições dos comandos Update e ou Delete

UPDATE tabela
SET coluna4=valor1
WHERE funcao6(coluna3)=valor2;

– Nos novos valores do comando Update e Insert

INSERT INTO tabela (coluna1,coluna2)
VALUES (1,funcao7(valor));
UPDATE tabela
SET coluna4=funcao8(valor);

Funções Mais Comuns

● Os SGBDs normalmente disponibilizam funções para
– Caracteres
● Colocar em maiúsculo/minúsculo, pedaço da string, tamanho, etc
– Numéricas
● Arredondamento, trigonometria, etc
– Datas
● Operações de extração e manipulação de datas/horas
– Conversão
● Converter de um tipo de dado em outro
– Gerais
● Funções diversas

Funções Caracteres

● PostgreSQL
– upper, lower, substr, trim, ...

Funções Numéricas

● PostgreSQL
– trunc, exp, pi, random, round, ....
http://www.postgresql.org/docs/9.3/interactive/functions-math.html

Funções com Data

● PostgreSQL
– current_date, current_time, now(), extract(day ...) ,....
http://www.postgresql.org/docs/9.3/interactive/functions-datetime.html

Operação com Datas

● Cada banco tem o seu formato, para permitir
operações com datas.
● Operações com datas nos permite somar/diminuir
horas, minutos, anos, meses, etc...
http://www.postgresql.org/docs/9.3/interactive/functions-datetime.html

Funções de Conversão

● PostgreSQL
– to_char, to_date, to_number,....
– http://www.postgresql.org/docs/9.3/interactive/functions-formatting.html
– Cast ()

Ex.: SELECT cast (idade AS text)
FROM aluno;

http://www.postgresql.org/docs/9.3/interactive/typeconv.html
http://www.postgresql.org/docs/9.3/interactive/typeconv-func.html


Funções de Condições na Projeção

● PostgreSQL
– coalesce(...), case when ... then ... else ... end,....

http://www.postgresql.org/docs/9.3/interactive/functions-conditional.html

Coalesce: Retorna o primeiro
argumento que não for null

Case when: utilizado na PROJEÇÂO,
para tomar decisões do que deve ser projetado

Funções de Grupo

● Funções de Grupo operam em
conjuntos de linhas para fornecerem
um resultado por grupo.

Funções de Várias Linhas

ou

Funções de Grupo

SELECT MAX(idade)

Mais Comuns

● AVG(coluna) – valor médio
● COUNT(*) COUNT(coluna) – número de linhas
● MAX(coluna) – valor máximo
● MIN(coluna) – valor mínimo
● STDDEV(coluna) – desvio padrão
● SUM(coluna) – soma de todos os valores
● VARIANCE(coluna) – variação da coluna

No lugar das colunas podemos usar expressões, como soma de colunas, etc.

Valores Nulos nas Funções de

Grupo

● As funções de Grupo descartam valores nulos (null).

SELECT COUNT(*)
FROM aluno;

SELECT COUNT(telefone)
FROM aluno;

Cuidado

● Não é possível solicitar na projeção da mesma consulta
informações de várias linhas misturadas com funções de
Grupo.

SELECT matricula,nome,idade,MAX(idade)
FROM aluno;

● Mas é permitido utilizar na projeção diversas funções de
grupo e funções de linha sobre funções de grupo.

SELECT MAX(idade),MIN(idade),ROUND(AVG(idade))
FROM aluno;

Funções de Grupo

● Funções de Grupo operam em
conjuntos de linhas para fornecerem
um resultado por grupo.

Funções de Várias Linhas

ou

Funções de Grupo

Funções de Grupo

● Funções de Grupo operam em
conjuntos de linhas para fornecerem
um resultado por grupo.

Funções de Várias Linhas

ou

Funções de Grupo

SELECT MAX(idade)
FROM ALUNO
WHERE CIDADE='PELOTAS';

● Porém até o momento, todas as funções de grupo trataram a
tabela como um grande grupo de informações.
● Podemos subdividir a tabela/consulta em grupos menores?
Pode haver seleção


GROUP BY

● Usando GROUP BY dividimos as linhas retornadas na
consulta/tabela em grupos menores ou subgrupos.
● Podemos utilizar as Funções de Grupo para retornar
informações sumárias para cada subgrupo.

Como obter a maior idade dos aluno agrupado por cidade?

SELECT [DISTINCT] {*,coluna, expr [as apelido]}
FROM nomeTabela
[WHERE condição(ções)]
[GROUP BY {coluna, expr, ...}]
[ORDER BY {coluna, expr, ...} [ASC|DESC]];

GROUP BY
Como obter o número
de alunos por
cidade??

SELECT MAX(idade),cidade
FROM aluno
GROUP BY cidade;

SELECT MAX(idade),upper(cidade)
FROM aluno
GROUP BY upper(cidade);

Internamente o SGBD
●agrupa primeiro
●aplica as funções de grupo
●entrega o resultado;

Várias colunas na cláusula

GROUP BY

É possível agrupar os resultados em vários subgrupos.
● Na tabela abaixo, queremos obter os maiores salários, por cargo dentro
de cada departamento.

Várias colunas na cláusula

GROUP BY

SELECT cargo,coddepartamento,MAX(salario)
FROM funcionario
GROUP BY coddepartamento,cargo
ORDER BY 2;

Cuidado

● Qualquer coluna ou expressão na lista SELECT que não seja
uma função de grupo deve estar na cláusula GROUP BY.

SELECT cidade,MIN(idade)
FROM aluno;

SELECT cidade,MIN(idade)
FROM aluno
GROUP BY cidade;

Misturando

SELECT UPPER(cidade) as Cidade,MAX(idade) as Idade
FROM aluno
WHERE telefone is NOT null
GROUP BY UPPER(cidade);

Mas e se quisermos restringir os grupos??
Por exemplo, queremos só os grupos, onde a idade é maior ou igual à 18.

Cláusula HAVING

● HAVING consegue restringir grupos
– As linhas são selecionadas
– A função de grupo é aplicada
– Os grupos que forem aprovados pela cláusula HAVING são exibidos.

SELECT UPPER(cidade) as Cidade,MAX(idade) as Idade
FROM aluno
WHERE telefone is NOT null
GROUP BY UPPER(cidade)
HAVING MAX(idade)>=18
ORDER BY 2 DESC;

SELECT [DISTINCT] {*,nomeColuna [as apelido]}
FROM nomeTabela
[WHERE condição(ções)]
[GROUP BY {expr,expr, ...}]
[HAVING condições do grupo]
[ORDER BY {coluna, expr, ...} [ASC|DESC]];

Exercícios

1) Crie uma consulta para exibir a data atual
2) Crie uma consulta para informar o dia da semana atual (segunda, terça, quarta)
3) Exiba o código do funcionário, o nome, o salário e o aumento salarial de 15% expresso como número inteiro
4) Adicione a consulta anterior uma coluna que conterá o salário novo menos o salário antigo.
5) Exiba o nome do funcionário, a data de admissão e a data de efetivação, que é seis meses após a admissão.
6) Para cada funcionário exiba o nome do mesmo e calcule o número de meses entre a hoje e a sua data de
admissão. Ordene a consulta pelo número de meses. Arredonde para inteiro o número de meses.
7) Crie uma consulta que produza a seguinte frase: O <nomefunc> recebe R$ <salario> mensalmente, mas deseja
receber <salário * 4>. Coloque um label de “sonho” a coluna.
8) Faça um select, que retorne o nome do funcionário com a primeira letra em maiúscula e o número de letras que o
nome contem. Para todos os funcionários cujos os nomes começam com J ou M. Coloque em ordem decrescente
pelo número de letras
9) Exiba a admissão e o dia (segunda, terça, quarta, ...) em que o funcionário começou a trabalhar. Ordene pelo dia
da semana.
10) Faça uma consulta pelo nome do aluno e o telefone, informando “Sem telefone”, para os alunos em que o telefone
é null.
11) Faça uma consulta que exiba o nome do funcionário e a quantia de salário através de asteriscos. Cada asterisco
representa R$ 100,00. Coloque em ordem decrescente de salário.
12) Exiba o nome do aluno e a faixa de idade dele. De acordo com a seguinte especificação.
0-18 = Categoria A 19-30 = Categoria B 31-61 = Categoria C Maior 61 = Categoria D
13) Exiba o maior salário, o médio, o menor e a soma de todos os salários de todos os funcionários.
14) Arredonde os resultados da consulta anterior para números inteiros.
15) Selecione o número de funcionários totais e o número de funcionários que possuem gerentes.
16) Crie uma consulta para exibir o maior salário, o salário médio, o menor salário e a soma de todos os salários para
cada cargo dos funcionários. Coloque label nas colunas como Máximo, Médio, Menor e Soma.
17) Exiba o número de funcionários por cargo.
18) Faça uma consulta que exiba o número do gerente e o menor pagamento salarial sob a supervisão deste gerente.
19) Crie uma consulta que exiba

Finalizado